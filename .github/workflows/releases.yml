name: Build and Release Binaries

on:
  push:
    branches:
      - main

env:
  SRC: 'src/main.cpp'  # Chemin vers le fichier source principal
  BUILD_DIR: 'build'  # Répertoire de construction
  DIST_DIR: 'dist'  # Répertoire de distribution
  CMAKE_BUILD_TYPE: 'Release'  # Type de build CMake

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: linux
            artifact_name: maze-linux-x64
          - os: windows-latest
            target: win32
            msvc_arch: x86
            artifact_name: maze-win32.exe
          - os: windows-latest
            target: win64
            msvc_arch: x64
            artifact_name: maze-win64.exe
          - os: macos-latest
            target: macos
            artifact_name: maze-macos
    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up build tools (Linux / macOS)
        if: matrix.os != 'windows-latest'
        run: |
          sudo apt-get update || true
          sudo apt-get install -y build-essential cmake || true

      - name: Set up MSVC (Windows)
        if: matrix.os == 'windows-latest'
        uses: ilammy/msvc-dev-cmd@v1
        with:
          arch: ${{ matrix.msvc_arch }}

      - name: Build (Linux/macOS)
        if: matrix.os != 'windows-latest'
        run: |
          mkdir -p ${{env.BUILD_DIR}}
          g++ -O2 -o ${{env.BUILD_DIR}}/${{ matrix.artifact_name }} ${{ env.SRC }}

      - name: Build (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          cl /O2 /Fe:${{env.BUILD_DIR}}\\${{ matrix.artifact_name }} ${{ env.SRC }}

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: ${{env.BUILD_DIR}}/${{ matrix.artifact_name }}

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{env.DIST_DIR}}

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: Latest Maze Build
          body: "Automatic build from push to `main`"
          files: ${{env.DIST_DIR}}/**/*  # récupère tous les artefacts
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
