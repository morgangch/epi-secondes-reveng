name: Build and Release Binaries

on:
  push:
    branches:
      - main

permissions:
  contents: write

env:
  SRC: 'src/main.cpp'
  SRCWIN: 'src\\main.cpp'
  BUILD_DIR: 'build'
  DIST_DIR: 'dist'

jobs:
  build:
    strategy:
      matrix:
        include:
          - os: ubuntu-latest
            target: linux
            artifact_name: maze-linux-x64
          - os: windows-latest
            target: windows
            artifact_name: maze-win64.exe
          - os: macos-latest
            target: macos
            artifact_name: maze-macos

    name: Build ${{ matrix.target }}
    runs-on: ${{ matrix.os }}

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      # Linux
      - name: Install dependencies (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          sudo apt-get update
          sudo apt-get install -y libsfml-dev

      - name: Build (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          mkdir -p ${{env.BUILD_DIR}}
          g++ -std=c++17 -O2 -o ${{env.BUILD_DIR}}/${{ matrix.artifact_name }} ${{ env.SRC }} \
            -lsfml-graphics -lsfml-window -lsfml-system

      # macOS
      - name: Download SFML 2.6.2 (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          curl -L -o sfml.tar.gz https://www.sfml-dev.org/files/SFML-2.6.2-macOS-clang-arm64.tar.gz
          mkdir -p sfml
          tar -xzf sfml.tar.gz -C sfml --strip-components=1
          echo "SFML_PATH=$(pwd)/sfml" >> $GITHUB_ENV

      - name: Build (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          mkdir -p ${{ env.BUILD_DIR }}
          g++ -std=c++17 -O2 \
            -I$SFML_PATH/include \
            -L$SFML_PATH/lib \
            -o ${{ env.BUILD_DIR }}/${{ matrix.artifact_name }} \
            ${{ env.SRC }} \
            -lsfml-graphics -lsfml-window -lsfml-system

      # Windows
      - name: Download SFML 2.6.2 for Windows (GCC 13.1)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          curl -L -o sfml.zip https://www.sfml-dev.org/files/SFML-2.6.2-windows-gcc-13.1.0-mingw-64-bit.zip
          powershell -Command "Expand-Archive -Path sfml.zip -DestinationPath sfml"

      - name: Build (Windows)
        if: matrix.os == 'windows-latest'
        shell: cmd
        run: |
          mkdir build
          g++ -std=c++17 -O2 ^
            -Isfml\SFML-2.6.2\include ^
            -Lsfml\SFML-2.6.2\lib ^
            -o build\${{ matrix.artifact_name }} ^
            ${{ env.SRCWIN }} ^
            -lsfml-graphics -lsfml-window -lsfml-system

      - name: Copy DLLs (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          Copy-Item -Path sfml\SFML-2.6.2\bin\*.dll -Destination build\

      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ matrix.artifact_name }}
          path: |
            ${{ env.BUILD_DIR }}/${{ matrix.artifact_name }}
            ${{ env.BUILD_DIR }}/*.dll

  release:
    needs: build
    runs-on: ubuntu-latest
    steps:
      - name: Download all artifacts
        uses: actions/download-artifact@v4
        with:
          path: ${{ env.DIST_DIR }}

      - name: Create release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: latest
          name: Latest Maze Build
          body: "Automatic build from push to `main`"
          files: ${{ env.DIST_DIR }}/**/*
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
